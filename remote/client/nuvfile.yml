# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'

tasks:

  upload-tasks:
    silent: true
    cmds:
    - test -d "$NUV_PWD/olaris-ops" || die "we need an olaris-ops folder in current directory"
    - |
      export TEMPFILE="$NUV_TMP/olaris-ops"
      #echo $TEMPFILE
      cd $NUV_PWD
      /usr/bin/tar czf "${TEMPFILE}.tgz" olaris-ops
      md5sum ${TEMPFILE}.tgz | awk '{print $1}' >${TEMPFILE}.curr
      export CURR="$(cat ${TEMPFILE}.curr)"
      export LAST="$(cat ${TEMPFILE}.last)"
      #echo "CURR=$CURR LAST=$LAST"
      if test "$LAST" != "$CURR"
      then
        ntfy publish \
        --token "$NUV_REMOTE_NTFY_TOKEN" \
        --title "UPLOAD: checksum $CURR" \
        --tags upload \
        --file "${TEMPFILE}.tgz" \
        "$NUV_REMOTE_NTFY_TOPIC_IN" | jq -r .message
        cp "$TEMPFILE.curr" "$TEMPFILE.last"
      fi
  
  select:
    silent: true
    desc: cloud selection
    cmds:
    - config NUV_REMOTE_CLOUD={{._cloud_}}
    - echo selected cloud "{{._cloud_}}"

  refresh:
    silent: true
    desc: cloud selection
    cmds:
    - echo "0" >"$NUV_TMP/olaris-ops.curr"
    - echo "1" >"$NUV_TMP/olaris-ops.last"
    - task: upload-tasks

  expand:
    silent: true
    cmds:
      #- echo {{.HOSTSEL}}
      - test -n "$NUV_REMOTE_CLOUD" || die "select current cloud with 'select' subcommand"
      - |
        echo "{{.HOSTSEL}}-$NUV_REMOTE_CLOUD" >_hostsel
        echo "{{.HOSTSEL}}" | awk -F- '{if($1=="*") $1="all"; print($1)}' >_cmd
      #- echo "$(cat _cmd) $(cat _hostsel)"
    vars:
      HOSTSEL:
        sh: |
            echo  "{{._host_selector_}}" | awk -F- '{
              if($1 == "") $1="*";
              if($2 == "") $2="*";
              if($3 == "") $3="*";
              print $1 "-" $2 "-" $3
            }'

  task:
    silent: true
    desc: client
    cmds:
    - task: expand
    - task: upload-tasks
    - |
      set -- $ARGS
      export NTFY_MESSAGE="nuv ops $(cat _cmd) $@"
      export NTFY_TITLE="$(cat _hostsel)"
      export NTFY_TOKEN="$NUV_REMOTE_NTFY_TOKEN"
      export NTFY_TAGS=command
      ntfy publish -F "$NUV_REMOTE_NTFY_TOPIC_IN" >_message
    - TZ=GMT datefmt -t "$(cat _message | jq -r '.time')" -f TimeOnly
    env:
      ARGS: 
        sh: a="{{._args_}}" ; echo "${a:1:-1}"
 
  shell:
    silent: true
    cmds:
    - task: expand
    #- echo $COMMAND
    #- env | grep NTFY_
    - |
      set -- $COMMAND
      test "$1" = "'--'" && shift
      export NTFY_MESSAGE="$@"
      export NTFY_TITLE="$(cat _hostsel)"
      export NTFY_TAGS=command
      export NTFY_TOKEN="$NUV_REMOTE_NTFY_TOKEN"
      ntfy publish -F "$NUV_REMOTE_NTFY_TOPIC_IN" >_message 
    - TZ=GMT datefmt -t "$(cat _message | jq -r '.time')" -f TimeOnly
    - cat _message
    env:
      COMMAND: 
        sh: a="{{._command_}}" ; echo "${a:1:-1}"
